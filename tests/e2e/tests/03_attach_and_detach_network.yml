---
- name: Update vm networks var (rm networks)
  ansible.builtin.set_fact:
    zk_vm_networks: []
  when: inventory_hostname in groups['zk_vms']

- ansible.builtin.import_role:
    name: karlivory.zk.build_facts
- ansible.builtin.import_role:
    name: karlivory.zk.provision_vms

- name: Assert domain xml does not have removed network
  command: virsh dumpxml {{ zk_vm_name }}
  register: vm_xml_after_removal
  delegate_to: "{{ zk_vm_kvm_hosts }}"
  changed_when: false
  when: inventory_hostname in groups['zk_vms']
- assert:
    that:
      - "'virbr0' not in vm_xml_after_removal.stdout"
    fail_msg: "Removed network is still present in domain XML"
  when: inventory_hostname in groups['zk_vms']

- name: Update vm networks var (add network)
  ansible.builtin.set_fact:
    zk_vm_networks:
      - name: virbr0
        netplan:
          addresses: ["{{ ansible_host }}/24"]
  when: inventory_hostname in groups['zk_vms']

- ansible.builtin.import_role:
    name: karlivory.zk.build_facts
- ansible.builtin.import_role:
    name: karlivory.zk.provision_vms

- name: Assert domain xml has new network
  command: virsh dumpxml {{ zk_vm_name }}
  register: vm_xml
  delegate_to: "{{ zk_vm_kvm_hosts }}"
  changed_when: false
  when: inventory_hostname in groups['zk_vms']
- assert:
    that:
      - "'virbr0' in vm_xml.stdout"
    fail_msg: "Network is not present in domain XML"
  when: inventory_hostname in groups['zk_vms']

- name: Reboot vm
  ansible.builtin.reboot:
  become: true
  when: inventory_hostname in groups['zk_vms']

- name: Assert domain xml has new network
  command: virsh dumpxml {{ zk_vm_name }}
  register: vm_xml
  delegate_to: "{{ zk_vm_kvm_hosts }}"
  changed_when: false
  when: inventory_hostname in groups['zk_vms']
- assert:
    that:
      - "'virbr0' in vm_xml.stdout"
    fail_msg: "Network is not present in domain XML"
  when: inventory_hostname in groups['zk_vms']

- name: Wait for VM to be reachable
  ansible.builtin.wait_for_connection:
    delay: 10
    timeout: 120
  when: inventory_hostname in groups['zk_vms']
