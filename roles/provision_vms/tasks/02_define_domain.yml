---
# host: kvm_host
# vars: vm, zk_kvm, zk_info

- ansible.builtin.set_fact:
    domain_exists: "{{ vm.name in zk_info.virt_list_vms }}"
    vm_tmp_dir: "{{ zk_kvm.data_dir }}/tmp/{{ vm.name }}"

- name: Ensure vm tmp_dir exists
  become: true
  ansible.builtin.file:
    path: "{{ vm_tmp_dir }}"
    state: directory

- block:
    - ansible.builtin.set_fact:
        golden_image_path: "{{ zk_kvm.data_dir }}/golden_images/{{ vm.image }}.qcow2"
        max_memory_mb: "{{ zk_kvm.memballoon_mem_limit_mb }}"
        intermediate_image_path: "{{ vm_tmp_dir }}/vm.qcow2"
        boot_disk: "{{ vm.disks[0] }}"
        boot_disk_zfs_volume: "{{ vm.disks[0].zfs.zvol_parent }}/{{ vm.disks[0].name }}"

    - name: Copy golden image to temporary image
      become: true
      ansible.builtin.copy:
        remote_src: true
        src: "{{ golden_image_path }}"
        dest: "{{ intermediate_image_path }}"

    - name: Create zfs volume for vm boot disk
      ansible.builtin.include_tasks: ./disks/create_zvol.yml
      vars:
        disk: "{{ boot_disk }}"
        zfs_volume: "{{ boot_disk_zfs_volume }}"

    - name: Qemu-img convert temporary image to raw zvol # params tuned for fast copying
      become: true
      ansible.builtin.command: qemu-img convert -O raw -t none -T none -W "{{ intermediate_image_path }}" "/dev/zvol/{{ boot_disk_zfs_volume }}"
    - name: Create domain libvirt xml template
      become: true
      ansible.builtin.template:
        src: domain.xml.j2
        dest: "{{ vm_tmp_dir }}/vm.xml"

    - name: Virsh define domain from libvirt xml template
      become: true
      ansible.builtin.command: virsh define "{{ vm_tmp_dir }}/vm.xml"

  when: not domain_exists
  always:
    - name: Clean up vm intermediate image
      become: true
      ansible.builtin.file:
        path: "{{ intermediate_image_path }}"
        state: absent

- name: Start vm
  become: true
  community.libvirt.virt:
    name: "{{ vm.name }}"
    state: running
    autostart: true
